{"ast":null,"code":"var _jsxFileName = \"/home/jarek/dev-projects-react/feedback-app/src/components/FeedbackForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport RatingSelect from './RatingSelect';\nimport Card from './shared/Card';\nimport Button from './shared/Button';\nimport FeedbackContext from '../context/FeedbackContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackForm() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [rating, setRating] = useState(10);\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n  const {\n    addFeedback,\n    feedbackEdit,\n    updateFeedback\n  } = useContext(FeedbackContext);\n  useEffect(() => {\n    if (feedbackEdit.edit === true) {\n      setBtnDisabled(false);\n      setText(feedbackEdit.item.text);\n      setRating(feedbackEdit.item.rating);\n    }\n  }, [feedbackEdit]); // NOTE: This should be checking input value not state as state won't be the updated value until the next render of the component\n  // prettier-ignore\n\n  const handleTextChange = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n\n    // ðŸ‘ˆ  get the value\n    if (value === '') {\n      setBtnDisabled(true);\n      setMessage(null); // prettier-ignore\n    } else if (value.trim().length < 10) {\n      // ðŸ‘ˆ check for less than 10\n      setMessage('Text must be at least 10 characters');\n      setBtnDisabled(true);\n    } else {\n      setMessage(null);\n      setBtnDisabled(false);\n    }\n\n    setText(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text,\n        rating\n      };\n\n      if (feedbackEdit.edit === true) {\n        updateFeedback(feedbackEdit.item.id, newFeedback);\n      } else {\n        addFeedback(newFeedback);\n      } // NOTE: reset to default state after submission\n\n\n      setBtnDisabled(true); // ðŸ‘ˆ  add this line to reset disabled\n\n      setRating(10); //ðŸ‘ˆ add this line to set rating back to 10\n\n      setText('');\n    }\n  }; // NOTE: pass selected to RatingSelect so we don't need local duplicate state\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How would you rate your service with us?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingSelect, {\n        select: setRating,\n        selected: rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleTextChange,\n          type: \"text\",\n          placeholder: \"Write a review\",\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isDisabled: btnDisabled,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackForm, \"X7ov4iexSyI6ctQX0WMH7Afwqj0=\");\n\n_c = FeedbackForm;\nexport default FeedbackForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["useState","useContext","useEffect","RatingSelect","Card","Button","FeedbackContext","FeedbackForm","text","setText","rating","setRating","btnDisabled","setBtnDisabled","message","setMessage","addFeedback","feedbackEdit","updateFeedback","edit","item","handleTextChange","target","value","trim","length","handleSubmit","e","preventDefault","newFeedback","id"],"sources":["/home/jarek/dev-projects-react/feedback-app/src/components/FeedbackForm.jsx"],"sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport RatingSelect from './RatingSelect'\nimport Card from './shared/Card'\nimport Button from './shared/Button'\nimport FeedbackContext from '../context/FeedbackContext'\n\nfunction FeedbackForm() {\n  const [text, setText] = useState('')\n  const [rating, setRating] = useState(10)\n  const [btnDisabled, setBtnDisabled] = useState(true)\n  const [message, setMessage] = useState('')\n\n  const { addFeedback, feedbackEdit, updateFeedback } =\n    useContext(FeedbackContext)\n\n  useEffect(() => {\n    if (feedbackEdit.edit === true) {\n      setBtnDisabled(false)\n      setText(feedbackEdit.item.text)\n      setRating(feedbackEdit.item.rating)\n    }\n  }, [feedbackEdit])\n\n  // NOTE: This should be checking input value not state as state won't be the updated value until the next render of the component\n\n  // prettier-ignore\n  const handleTextChange = ({ target: { value } }) => { // ðŸ‘ˆ  get the value\n    if (value === '') {\n      setBtnDisabled(true)\n      setMessage(null)\n      \n  // prettier-ignore\n    } else if (value.trim().length < 10) { // ðŸ‘ˆ check for less than 10\n      setMessage('Text must be at least 10 characters')\n      setBtnDisabled(true)\n    } else {\n      setMessage(null)\n      setBtnDisabled(false)\n    }\n    setText(value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text,\n        rating,\n      }\n\n      if (feedbackEdit.edit === true) {\n        updateFeedback(feedbackEdit.item.id, newFeedback)\n      } else {\n        addFeedback(newFeedback)\n      }\n\n      // NOTE: reset to default state after submission\n      setBtnDisabled(true) // ðŸ‘ˆ  add this line to reset disabled\n      setRating(10) //ðŸ‘ˆ add this line to set rating back to 10\n      setText('')\n    }\n  }\n\n  // NOTE: pass selected to RatingSelect so we don't need local duplicate state\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>How would you rate your service with us?</h2>\n        <RatingSelect select={setRating} selected={rating} />\n        <div className='input-group'>\n          <input\n            onChange={handleTextChange}\n            type='text'\n            placeholder='Write a review'\n            value={text}\n          />\n          <Button type='submit' isDisabled={btnDisabled}>\n            Send\n          </Button>\n        </div>\n\n        {message && <div className='message'>{message}</div>}\n      </form>\n    </Card>\n  )\n}\n\nexport default FeedbackForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}