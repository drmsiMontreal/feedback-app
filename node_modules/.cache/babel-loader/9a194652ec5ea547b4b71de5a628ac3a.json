{"ast":null,"code":"var _jsxFileName = \"/home/jarek/dev-projects-react/feedback-app/src/components/FeedbackStats.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport FeedbackContext from '../context/FeedbackContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackStats() {\n  _s();\n\n  const {\n    feedback\n  } = useContext(FeedbackContext); // NOTE: simpler average calculation\n  // Calculate ratings avg\n\n  const average = Math.round(feedback.reduce((acc, _ref) => {\n    let {\n      rating\n    } = _ref;\n    return acc + rating;\n  }, 0) / feedback.length); // average = average.toFixed(1).replace(/[.,]0$/, '')\n  // average = Math.round(average)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [feedback.length, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating: \", isNaN(average) ? 0 : average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeedbackStats, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n\n_c = FeedbackStats;\nexport default FeedbackStats;\nFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"names":["useContext","FeedbackContext","FeedbackStats","feedback","average","Math","round","reduce","acc","rating","length","isNaN","Footer"],"sources":["/home/jarek/dev-projects-react/feedback-app/src/components/FeedbackStats.jsx"],"sourcesContent":["import { useContext } from 'react'\nimport FeedbackContext from '../context/FeedbackContext'\n\nfunction FeedbackStats() {\n  const { feedback } = useContext(FeedbackContext)\n\n  // NOTE: simpler average calculation\n  // Calculate ratings avg\n  const average = Math.round(\n    feedback.reduce((acc, { rating }) => acc + rating, 0) / feedback.length\n  )\n\n  // average = average.toFixed(1).replace(/[.,]0$/, '')\n  // average = Math.round(average)\n\n  return (\n    <div className='feedback-stats'>\n      <h4>{feedback.length} Reviews</h4>\n      <h4>Average Rating: {isNaN(average) ? 0 : average}</h4>\n    </div>\n  )\n}\n\nexport default FeedbackStats\nFooter\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;;;AAEA,SAASC,aAAT,GAAyB;EAAA;;EACvB,MAAM;IAAEC;EAAF,IAAeH,UAAU,CAACC,eAAD,CAA/B,CADuB,CAGvB;EACA;;EACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAL,CACdH,QAAQ,CAACI,MAAT,CAAgB,CAACC,GAAD;IAAA,IAAM;MAAEC;IAAF,CAAN;IAAA,OAAqBD,GAAG,GAAGC,MAA3B;EAAA,CAAhB,EAAmD,CAAnD,IAAwDN,QAAQ,CAACO,MADnD,CAAhB,CALuB,CASvB;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAA,WAAKP,QAAQ,CAACO,MAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,+BAAqBC,KAAK,CAACP,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAA1C;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAlBQF,a;;KAAAA,a;AAoBT,eAAeA,aAAf;AACAU,MAAM"},"metadata":{},"sourceType":"module"}