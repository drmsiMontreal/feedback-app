{"ast":null,"code":"var _jsxFileName = \"/home/jarek/dev-projects-react/feedback-app/src/components/RatingSelect.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RatingSelect(_ref) {\n  let {\n    select,\n    selected\n  } = _ref;\n\n  // NOTE: We don't need local state here as it's a duplicate of parent state\n  // also no real need for useEffect or context\n  // useEffect(() => {\n  //   select(feedbackEdit.item.rating)\n  // }, [feedbackEdit])\n  const handleChange = e => {\n    select(+e.currentTarget.value);\n  }; // NOTE: simplified with iteration\n\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"rating\",\n    children: Array.from({\n      length: 10\n    }, (_, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `num${i + 1}`,\n        name: \"rating\",\n        value: i + 1,\n        onChange: handleChange,\n        checked: selected === i + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `num${i + 1}`,\n        children: i + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, `rating-${i + 1}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n\n_c = RatingSelect;\nexport default RatingSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"RatingSelect\");","map":{"version":3,"names":["RatingSelect","select","selected","handleChange","e","currentTarget","value","Array","from","length","_","i"],"sources":["/home/jarek/dev-projects-react/feedback-app/src/components/RatingSelect.jsx"],"sourcesContent":["\nfunction RatingSelect({ select, selected }) {\n    // NOTE: We don't need local state here as it's a duplicate of parent state\n    // also no real need for useEffect or context\n    // useEffect(() => {\n    //   select(feedbackEdit.item.rating)\n    // }, [feedbackEdit])\n  \n    const handleChange = (e) => {\n      select(+e.currentTarget.value)\n    }\n  \n    // NOTE: simplified with iteration\n    return (\n      <ul className='rating'>\n        {Array.from({ length: 10 }, (_, i) => (\n          <li key={`rating-${i + 1}`}>\n            <input\n              type='radio'\n              id={`num${i + 1}`}\n              name='rating'\n              value={i + 1}\n              onChange={handleChange}\n              checked={selected === i + 1}\n            />\n            <label htmlFor={`num${i + 1}`}>{i + 1}</label>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n  \n  export default RatingSelect"],"mappings":";;;AACA,SAASA,YAAT,OAA4C;EAAA,IAAtB;IAAEC,MAAF;IAAUC;EAAV,CAAsB;;EACxC;EACA;EACA;EACA;EACA;EAEA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BH,MAAM,CAAC,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAlB,CAAN;EACD,CAFD,CAPwC,CAWxC;;;EACA,oBACE;IAAI,SAAS,EAAC,QAAd;IAAA,UACGC,KAAK,CAACC,IAAN,CAAW;MAAEC,MAAM,EAAE;IAAV,CAAX,EAA2B,CAACC,CAAD,EAAIC,CAAJ,kBAC1B;MAAA,wBACE;QACE,IAAI,EAAC,OADP;QAEE,EAAE,EAAG,MAAKA,CAAC,GAAG,CAAE,EAFlB;QAGE,IAAI,EAAC,QAHP;QAIE,KAAK,EAAEA,CAAC,GAAG,CAJb;QAKE,QAAQ,EAAER,YALZ;QAME,OAAO,EAAED,QAAQ,KAAKS,CAAC,GAAG;MAN5B;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAO,OAAO,EAAG,MAAKA,CAAC,GAAG,CAAE,EAA5B;QAAA,UAAgCA,CAAC,GAAG;MAApC;QAAA;QAAA;QAAA;MAAA,QATF;IAAA,GAAU,UAASA,CAAC,GAAG,CAAE,EAAzB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;KA7BMX,Y;AA+BP,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}