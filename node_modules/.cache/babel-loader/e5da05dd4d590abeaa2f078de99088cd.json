{"ast":null,"code":"var _jsxFileName = \"/home/jarek/dev-projects-react/feedback-app/src/context/FeedbackContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackContext = /*#__PURE__*/createContext();\nexport const FeedbackProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [feedback, setFeedback] = useState([]);\n  const [feedbackEdit, setFeedbackEdit] = useState({\n    item: {},\n    edit: false\n  });\n  useEffect(() => {\n    fetchFeedback();\n  }, []); // Fetch feedback\n\n  const fetchFeedback = async () => {\n    const response = await fetch(`/feedback?_sort=id&_order=desc`);\n    const data = await response.json();\n    setFeedback(data);\n    setIsLoading(false);\n  }; // Add feedback\n\n\n  const addFeedback = async newFeedback => {\n    const response = await fetch('/feedback', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newFeedback)\n    });\n    const data = await response.json();\n    setFeedback([data, ...feedback]);\n  }; // Delete feedback\n\n\n  const deleteFeedback = async id => {\n    if (window.confirm('Are you sure you want to delete?')) {\n      await fetch(`/feedback/${id}`, {\n        method: 'DELETE'\n      });\n      setFeedback(feedback.filter(item => item.id !== id));\n    }\n  }; // Update feedback item\n\n\n  const updateFeedback = async (id, updItem) => {\n    const response = await fetch(`/feedback/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updItem)\n    });\n    const data = await response.json(); // NOTE: no need to spread data and item\n\n    setFeedback(feedback.map(item => item.id === id ? data : item)); // FIX: this fixes being able to add a feedback after editing\n    // credit to Jose https://www.udemy.com/course/react-front-to-back-2022/learn/lecture/29768200#questions/16462688\n\n    setFeedbackEdit({\n      item: {},\n      edit: false\n    });\n  }; // Set item to be updated\n\n\n  const editFeedback = item => {\n    setFeedbackEdit({\n      item,\n      edit: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FeedbackContext.Provider, {\n    value: {\n      feedback,\n      feedbackEdit,\n      isLoading,\n      deleteFeedback,\n      addFeedback,\n      editFeedback,\n      updateFeedback\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedbackProvider, \"0D9cn4bOhkltnm6JCvm1TB1aRQg=\");\n\n_c = FeedbackProvider;\nexport default FeedbackContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","FeedbackContext","FeedbackProvider","children","isLoading","setIsLoading","feedback","setFeedback","feedbackEdit","setFeedbackEdit","item","edit","fetchFeedback","response","fetch","data","json","addFeedback","newFeedback","method","headers","body","JSON","stringify","deleteFeedback","id","window","confirm","filter","updateFeedback","updItem","map","editFeedback"],"sources":["/home/jarek/dev-projects-react/feedback-app/src/context/FeedbackContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\n\nconst FeedbackContext = createContext()\n\nexport const FeedbackProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [feedback, setFeedback] = useState([])\n  const [feedbackEdit, setFeedbackEdit] = useState({\n    item: {},\n    edit: false,\n  })\n\n  useEffect(() => {\n    fetchFeedback()\n  }, [])\n\n  // Fetch feedback\n  const fetchFeedback = async () => {\n    const response = await fetch(`/feedback?_sort=id&_order=desc`)\n    const data = await response.json()\n\n    setFeedback(data)\n    setIsLoading(false)\n  }\n\n  // Add feedback\n  const addFeedback = async (newFeedback) => {\n    const response = await fetch('/feedback', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newFeedback),\n    })\n\n    const data = await response.json()\n\n    setFeedback([data, ...feedback])\n  }\n\n  // Delete feedback\n  const deleteFeedback = async (id) => {\n    if (window.confirm('Are you sure you want to delete?')) {\n      await fetch(`/feedback/${id}`, { method: 'DELETE' })\n\n      setFeedback(feedback.filter((item) => item.id !== id))\n    }\n  }\n\n  // Update feedback item\n  const updateFeedback = async (id, updItem) => {\n    const response = await fetch(`/feedback/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updItem),\n    })\n\n    const data = await response.json()\n\n    // NOTE: no need to spread data and item\n    setFeedback(feedback.map((item) => (item.id === id ? data : item)))\n\n    // FIX: this fixes being able to add a feedback after editing\n    // credit to Jose https://www.udemy.com/course/react-front-to-back-2022/learn/lecture/29768200#questions/16462688\n    setFeedbackEdit({\n      item: {},\n      edit: false,\n    })\n  }\n\n  // Set item to be updated\n  const editFeedback = (item) => {\n    setFeedbackEdit({\n      item,\n      edit: true,\n    })\n  }\n\n  return (\n    <FeedbackContext.Provider\n      value={{\n        feedback,\n        feedbackEdit,\n        isLoading,\n        deleteFeedback,\n        addFeedback,\n        editFeedback,\n        updateFeedback,\n      }}\n    >\n      {children}\n    </FeedbackContext.Provider>\n  )\n}\n\nexport default FeedbackContext"],"mappings":"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"},"metadata":{},"sourceType":"module"}